<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>URBANWOOD- Your Cart</title>
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
        :root {
            --primary: #2A9D8F;
            --secondary: #264653;
            --accent: #E9C46A;
            --danger: #E76F51;
            --success: #43AA8B;
            --light: #F8F9FA;
            --dark: #1A1A1A;
            --white: #FFFFFF;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: var(--light);
            color: var(--dark);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .page-header {
            text-align: center;
            padding: 3rem 0;
            background: var(--white);
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
        }

        .page-header h1 {
            font-size: 2.5rem;
            color: var(--secondary);
            margin-bottom: 1rem;
        }

        .breadcrumb {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            color: var(--dark);
        }

        .breadcrumb a {
            color: var(--primary);
            text-decoration: none;
        }

        .cart-container {
            display: grid;
            grid-template-columns: 1fr 350px;
            gap: 2rem;
        }

        .cart-items {
            background: var(--white);
            border-radius: 1rem;
            padding: 2rem;
            box-shadow: var(--shadow);
        }

        .cart-item {
            display: grid;
            grid-template-columns: auto 1fr auto auto;
            gap: 2rem;
            padding: 1.5rem;
            border-bottom: 1px solid var(--light);
            align-items: center;
        }

        .cart-item:last-child {
            border-bottom: none;
        }

        .item-image {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 0.5rem;
        }

        .item-details h3 {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            color: var(--secondary);
        }

        .item-price {
            color: var(--primary);
            font-weight: 600;
            font-size: 1.1rem;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .quantity-btn {
            width: 35px;
            height: 35px;
            border: 2px solid var(--primary);
            background: none;
            border-radius: 50%;
            color: var(--primary);
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .quantity-btn:hover {
            background: var(--primary);
            color: var(--white);
        }

        .quantity-input {
            width: 50px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 0.5rem;
            padding: 0.5rem;
        }

        .remove-btn {
            background: var(--danger);
            color: var(--white);
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .remove-btn:hover {
            opacity: 0.9;
            transform: scale(1.05);
        }

        .cart-summary {
            background: var(--white);
            border-radius: 1rem;
            padding: 2rem;
            box-shadow: var(--shadow);
            height: fit-content;
        }

        .summary-title {
            font-size: 1.5rem;
            color: var(--secondary);
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--light);
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
        }

        .summary-total {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 2px solid var(--light);
            font-size: 1.2rem;
            font-weight: 600;
        }

        .checkout-btn {
            display: block;
            width: 100%;
            padding: 1rem;
            background: var(--primary);
            color: var(--white);
            border: none;
            border-radius: 0.5rem;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            text-decoration: none;
            margin-top: 1.5rem;
        }

        .checkout-btn:hover {
            background: var(--secondary);
            transform: translateY(-2px);
        }

        .empty-cart {
            text-align: center;
            padding: 3rem;
        }

        .empty-cart h2 {
            color: var(--secondary);
            margin-bottom: 1.5rem;
        }

        @media (max-width: 992px) {
            .cart-container {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .cart-item {
                grid-template-columns: 1fr;
                text-align: center;
                gap: 1rem;
            }

            .item-image {
                margin: 0 auto;
            }

            .quantity-controls {
                justify-content: center;
            }
        }
    </style>
</head>

<body>
    <div class="page-header">
        <h1>Shopping Cart</h1>
        <div class="breadcrumb">
            <a href="/">Home</a>
            <span>/</span>
            <span>Cart</span>
        </div>
    </div>

    <div class="container">
        <% if (cartItems && cartItems.length > 0) { %>
            <div class="cart-container">
                <div class="cart-items">
                    <% cartItems.forEach(item => { %>
                        <div class="cart-item">
                            <img src="/uploads/product-images/<%= item.productImages[0] %>" 
                                 alt="<%= item.productName %>" 
                                 class="item-image">
                            
                            <div class="item-details">
                                <h3><%= item.productName %></h3>
                                <p class="item-price">₹<%= item.salePrice.toLocaleString() %></p>
                                <% if (item.salePrice < item.regularPrice) { %>
                                    <small><del>₹<%= item.regularPrice.toLocaleString() %></del></small>
                                <% } %>
                            </div>

                            <div class="quantity-controls">
                                <button class="quantity-btn" onclick="updateQuantity('<%= item.productId %>', -1)">-</button>
                                <input type="number" 
                                       class="quantity-input" 
                                       value="<%= item.quantity %>"
                                       min="1" 
                                       max="10"
                                       data-product="<%= item.productId %>"
                                       readonly>
                                <button class="quantity-btn" onclick="updateQuantity('<%= item.productId %>', 1)">+</button>
                            </div>

                            <button class="remove-btn" onclick="removeProduct('<%= item.productId %>')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    <% }) %>
                </div>

                <div class="cart-summary">
                    <h2 class="summary-title">Order Summary</h2>
                    <div class="summary-item">
                        <span>Subtotal</span>
                        <span data-summary="subtotal">₹<%= subtotal.toLocaleString() %></span>
                    </div>
                    <div class="summary-item">
                        <span>Shipping</span>
                        <span data-summary="shipping">₹<%= shippingCost.toLocaleString() %></span>
                    </div>
                    <div class="summary-item summary-total">
                        <span>Total</span>
                        <span data-summary="total">₹<%= grandTotal.toLocaleString() %></span>
                    </div>
                    <a href="/checkout" class="checkout-btn">Proceed to Checkout</a>
                </div>
            </div>
        <% } else { %>
            <div class="empty-cart">
                <h2>Your cart is empty</h2>
                <a href="/shop" class="checkout-btn">Continue Shopping</a>
            </div>
        <% } %>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        async function updateQuantity(productId, change) {
            const quantityInput = document.querySelector(`input[data-product="${productId}"]`);
            const currentQuantity = parseInt(quantityInput.value);
            const newQuantity = currentQuantity + change;

            // Check quantity limits
            if (newQuantity < 1 || newQuantity > 10) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Quantity',
                    text: 'Quantity must be between 1 and 10',
                    confirmButtonColor: '#2A9D8F'
                });
                return;
            }

            try {
                const response = await fetch('/update-cart-quantity', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId: productId,
                        quantity: newQuantity
                    })
                });

                const data = await response.json();

                if (data.success) {
                    // Update quantity display
                    quantityInput.value = newQuantity;

                    // Update summary amounts
                    document.querySelector('[data-summary="subtotal"]').textContent = '₹' + data.subtotal.toLocaleString();
                    document.querySelector('[data-summary="shipping"]').textContent = '₹' + data.shippingCost.toLocaleString();
                    document.querySelector('[data-summary="total"]').textContent = '₹' + data.grandTotal.toLocaleString();
                } else {
                    throw new Error(data.message || 'Failed to update quantity');
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to update cart',
                    confirmButtonColor: '#2A9D8F'
                });
            }
        }

        async function removeProduct(productId) {
            try {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#2A9D8F',
                    cancelButtonColor: '#E76F51',
                    confirmButtonText: 'Yes, remove it!'
                });

                if (result.isConfirmed) {
                    const response = await fetch('/remove-from-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            productId: productId
                        })
                    });

                    const data = await response.json();

                    if (data.success) {
                        // Remove the item from DOM
                        const cartItem = document.querySelector(`input[data-product="${productId}"]`).closest('.cart-item');
                        cartItem.remove();

                        // Update summary amounts
                        document.querySelector('[data-summary="subtotal"]').textContent = '₹' + data.subtotal.toLocaleString();
                        document.querySelector('[data-summary="shipping"]').textContent = '₹' + data.shippingCost.toLocaleString();
                        document.querySelector('[data-summary="total"]').textContent = '₹' + data.grandTotal.toLocaleString();

                        // If cart becomes empty, reload the page
                        if (data.itemCount === 0) {
                            location.reload();
                        }

                        Swal.fire({
                            icon: 'success',
                            title: 'Removed!',
                            text: 'Product has been removed from cart.',
                            confirmButtonColor: '#2A9D8F'
                        });
                    } else {
                        throw new Error(data.message || 'Failed to remove product');
                    }
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to remove product',
                    confirmButtonColor: '#2A9D8F'
                });
            }
        }
    </script>
</body>
</html>