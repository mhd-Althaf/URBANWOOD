<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>URBANWOOD- Checkout</title>
    
    <!-- Include your CSS and other head elements -->
    
    <style>
        /* Add your custom styles here */
        .checkout-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .checkout-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
        }

        .main-content {
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }

        .product-list, .address-section, .order-summary {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }

        .product-item {
            display: grid;
            grid-template-columns: auto 1fr auto;
            gap: 1rem;
            padding: 1rem;
            border-bottom: 1px solid #eee;
        }

        .product-item:last-child {
            border-bottom: none;
        }

        .product-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
        }

        .product-details {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .order-summary {
            position: sticky;
            top: 2rem;
            height: fit-content;
        }

        .payment-methods {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin: 1.5rem 0;
        }

        .payment-option {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 0.8rem;
            border: 1px solid #eee;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.2s;
        }

        .payment-option:hover {
            background: #f8f9fa;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            padding: 0.8rem 0;
            border-bottom: 1px solid #eee;
        }

        .grand-total {
            font-size: 1.2rem;
            font-weight: 600;
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 2px solid #eee;
        }

        .place-order-btn {
            width: 100%;
            padding: 1rem;
            background: #2ecc71;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 500;
            cursor: pointer;
            transition: background 0.2s;
        }

        .place-order-btn:hover {
            background: #27ae60;
        }

        @media (max-width: 768px) {
            .checkout-grid {
                grid-template-columns: 1fr;
            }
            
            .order-summary {
                position: static;
            }
        }
    </style>
</head>
<body>
    <div class="checkout-container">
        <h1>Checkout</h1>
        
        <div class="checkout-grid">
            <!-- Left Column -->
            <div class="main-content">
                <!-- Products List -->
                <div class="product-list">
                    <h2>Your Items</h2>
                    <% cartItems.forEach(item => { %>
                        <div class="product-item">
                            <img src="/uploads/product-images/<%= item.product.productImages[0] %>" 
                                 alt="<%= item.product.productName %>"
                                 class="product-image">
                            <div class="product-details">
                                <div class="product-name"><%= item.product.productName %></div>
                                <div class="product-quantity">Quantity: <%= item.quantity %></div>
                                <div class="product-price">₹<%= item.total.toLocaleString() %></div>
                            </div>
                        </div>
                    <% }) %>
                </div>

                <!-- Address Section -->
                <div class="address-section">
                    
                        <!-- Address Selection Cards -->
<div class="address-cards-container">
    <% if (locals.userAddress && userAddress.length > 0) { %>
        
        <div class="address-cards-grid">
            <% userAddress[0]?.address?.map(address=>address)?.forEach((address, index) => { %>
                <div class="address-card" data-address-id="<%= address._id %>">
                    <div class="address-card-header">
                        <div class="radio-container">
                            <input 
                                type="radio" 
                                name="selectedAddress" 
                                id="address<%= address._id %>"
                                value="<%= address._id %>"
                                <%= index === 0 ? 'checked' : '' %>
                                class="address-radio"
                            >
                            <label for="address<%= address._id %>" class="address-type">
                                <%= address.addressType.toUpperCase() %>
                            </label>
                        </div>
                    </div>
                    <div class="address-card-body">
                        <p class="recipient-name"><%= address.name %></p>
                        <div class="address-details">
                            <p><%= address.city %></p>
                            <p><%= address.landMark %></p>
                            <p><%= address.state %> - <%= address.pincode %></p>
                        </div>
                        <div class="contact-info">
                            <p><i class="fas fa-phone"></i> <%= address.phone %></p>
                            <% if (address.altPhone) { %>
                                <p><i class="fas fa-phone"></i> <%= address.altPhone %></p>
                            <% } %>
                        </div>
                        <div class="card-actions">
                            <button class="edit-btn" onclick="editAddress('<%= address._id %>')">Edit</button>
                            <button class="delete-btn" onclick="deleteAddress('<%= address._id %>')">Delete</button>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    <% } else { %>
        <div class="no-address">
            <p>No addresses found. Please add a new address.</p>
            <button class="add-address-btn" onclick="window.location.href='/add-address'">Add New Address</button>
        </div>
    <% } %>
</div>

<style>
.address-cards-container {
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
}

.address-cards-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

.address-card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: transform 0.2s, box-shadow 0.2s;
    overflow: hidden;
    border: 1px solid #e0e0e0;
}

.address-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.address-card-header {
    padding: 15px;
    background: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
}

.radio-container {
    display: flex;
    align-items: center;
    gap: 10px;
}

.address-radio {
    cursor: pointer;
    width: 18px;
    height: 18px;
}

.address-type {
    font-weight: 600;
    color: #2c3e50;
    margin: 0;
}

.address-card-body {
    padding: 15px;
}

.recipient-name {
    font-weight: 600;
    font-size: 1.1em;
    margin-bottom: 10px;
    color: #2c3e50;
}

.address-details {
    margin-bottom: 15px;
}

.address-details p {
    margin: 5px 0;
    color: #4a5568;
}

.contact-info {
    margin-bottom: 15px;
    color: #4a5568;
}

.contact-info p {
    display: flex;
    align-items: center;
    gap: 8px;
    margin: 5px 0;
}

.card-actions {
    display: flex;
    gap: 10px;
    margin-top: 15px;
}

.edit-btn, .delete-btn {
    padding: 8px 16px;
    border-radius: 4px;
    border: none;
    cursor: pointer;
    font-weight: 500;
    transition: background-color 0.2s;
}

.edit-btn {
    background-color: #3498db;
    color: white;
}

.edit-btn:hover {
    background-color: #2980b9;
}

.delete-btn {
    background-color: #e74c3c;
    color: white;
}

.delete-btn:hover {
    background-color: #c0392b;
}

.no-address {
    text-align: center;
    padding: 40px;
    background: #f8f9fa;
    border-radius: 8px;
}

.add-address-btn {
    padding: 10px 20px;
    background-color: #2ecc71;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
    margin-top: 15px;
}

.add-address-btn:hover {
    background-color: #27ae60;
}

@media (max-width: 768px) {
    .address-cards-grid {
        grid-template-columns: 1fr;
    }
}
</style>

            </div>

            <!-- Right Column - Order Summary -->
            <div class="order-summary">
                <h2>Order Summary</h2>
                <div class="summary-totals">
                    <div class="summary-row">
                        <span>Subtotal</span>
                        <span>₹<%= subtotal.toLocaleString() %></span>
                    </div>
                    <div class="summary-row">
                        <span>Shipping</span>
                        <span>₹<%= shippingCost.toLocaleString() %></span>
                    </div>
                    <div class="summary-row grand-total">
                        <span>Total</span>
                        <span>₹<%= grandTotal.toLocaleString() %></span>
                    </div>
                </div>

                <div class="payment-methods">
                    <h3>Payment Method</h3>
                    <div class="payment-option">
                        <input type="radio" id="card" name="payment" value="card">
                        <label for="card">
                            <i class="fas fa-credit-card"></i>
                            Credit/Debit Card
                        </label>
                    </div>
                    <div class="payment-option">
                        <input type="radio" id="upi" name="payment" value="upi">
                        <label for="upi">
                            <i class="fas fa-mobile-alt"></i>
                            UPI Payment
                        </label>
                    </div>
                    <div class="payment-option">
                        <input type="radio" id="cod" name="payment" value="cod">
                        <label for="cod">
                            <i class="fas fa-money-bill-wave"></i>
                            Cash on Delivery
                        </label>
                    </div>
                </div>

                <button id="placeOrderBtn" class="place-order-btn">
                    Place Order
                </button>
            </div>
        </div>
    </div>

    <!-- <script>
        document.getElementById('placeOrderBtn').addEventListener('click', async () => {
            // Add order placement logic here
            try {
                const response = await fetch('/place-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        // Add order details
                    })
                });

                const data = await response.json();
                if (data.success) {
                    // Handle successful order placement
                    window.location.href = '/order-success';
                }
            } catch (error) {
                console.error('Error placing order:', error);
            }
        });
    </script> -->
    
    <script>
        document.getElementById('placeOrderBtn').addEventListener('click', async () => {
            try {
                const selectedAddressRadio = document.querySelector('input[name="selectedAddress"]:checked');
                if (!selectedAddressRadio) {
                    alert('Please select a delivery address');
                    return;
                }

                const selectedPaymentRadio = document.querySelector('input[name="payment"]:checked');
                if (!selectedPaymentRadio) {
                    alert('Please select a payment method');
                    return;
                }

                const orderDetails = {
                    addressId: selectedAddressRadio.value,
                    paymentMethod: selectedPaymentRadio.value
                };

                const response = await fetch('/place-order', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(orderDetails)
                });

                const data = await response.json();

                if (data.success) {
                    // Redirect to order success page
                    window.location.href = `/order-success/${data.orderId}`;
                } else {
                    alert(data.message || 'Error placing order');
                }

            } catch (error) {
                console.error('Error:', error);
                alert('Failed to place order. Please try again.');
            }
        });
    </script>
    
    <script>
        // Function to handle address selection
        document.querySelectorAll('.address-radio').forEach(radio => {
            radio.addEventListener('change', function() {
                const addressId = this.value;
                // console.log('Selected address ID:', addressId);
                
                // Remove active class from all cards
                document.querySelectorAll('.address-card').forEach(card => {
                    card.classList.remove('active-card');
                });
                
                // Add active class to selected card
                this.closest('.address-card').classList.add('active-card');
            });
        });
        
        // Function to edit address
        function editAddress(addressId) {
            // console.log('Edit address:', addressId);
            // Add your edit logic here
            // Example: window.location.href = `/edit-address/${addressId}`;
        }
        
        // Function to delete address
        function deleteAddress(addressId) {
            if (confirm('Are you sure you want to delete this address?')) {
                // console.log('Delete address:', addressId);
                // Add your delete logic here
                // Example: 
                // fetch(`/delete-address/${addressId}`, {
                //     method: 'DELETE'
                // }).then(response => {
                //     if (response.ok) {
                //         window.location.reload();
                //     }
                // });
            }
        }
        </script>
</body>
</html> 