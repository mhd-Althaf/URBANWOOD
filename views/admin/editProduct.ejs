<!DOCTYPE html>
<html>
<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
        }

        .content-main {
            width: 100%;
            padding: 2rem;
        }

        .content-header {
            max-width: 1200px;
            margin: 0 auto 2rem auto;
        }

        .content-title {
            color: #15803d;
            font-size: 1.8rem;
            font-weight: 600;
            text-align: center;
            margin-bottom: 1rem;
        }

        .card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        .form-select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            background-color: white;
        }

        .error-message {
            color: #dc2626;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        /* Image section styles */
        .image-section {
            margin-top: 2rem;
        }

        .image-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }

        .image-container {
            position: relative;
            aspect-ratio: 1;
        }

        .product-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 4px;
        }

        .delete-image {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            background: rgba(220, 38, 38, 0.9);
            color: white;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .delete-image:hover {
            background: #dc2626;
        }

        /* Submit button styles */
        #updateBtn {
            width: 100%;
            padding: 1rem;
            background-color: #15803d;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 1rem;
            cursor: pointer;
            margin-top: 2rem;
            transition: background-color 0.3s;
        }

        #updateBtn:hover {
            background-color: #166534;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }

            .content-main {
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <section class="content-main">
        <div class="content-header">
            <h2 class="content-title">Edit Product</h2>
        </div>

        <div class="card">
            <form id="productForm" method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data">
                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label" for="product_name">Product Name</label>
                        <input type="text" id="product_name" name="productName" class="form-control" value="<%= product.productName %>">
                        <div id="productName-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Description</label>
                        <textarea name="descriptionData" class="form-control" rows="4"><%= product.description %></textarea>
                        <div id="description-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Regular Price</label>
                        <input type="text" name="regularPrice" class="form-control" value="<%= product.regularPrice %>">
                        <div id="regularPrice-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Sale Price</label>
                        <input type="text" name="salePrice" class="form-control" value="<%= product.salePrice %>">
                        <div id="salePrice-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Quantity</label>
                        <input type="text" name="quantity" class="form-control" value="<%= product.quantity %>">
                        <div id="quantity-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Category</label>
                        <select name="category" class="form-select">
                            <% for (let i = 0; i < category.length; i++) { %>
                                <option value="<%= category[i].name %>" <%= product.category === category[i].name ? 'selected' : '' %>>
                                    <%= category[i].name %>
                                </option>
                            <% } %>
                        </select>
                        <div id="category-error" class="error-message"></div>
                    </div>
                </div>

                <div class="image-section">
                    <h3 class="form-label">Product Images</h3>
                    <div class="image-grid">
                        <% product.productImages.forEach((image, index) => { %>
                            <div class="image-container">
                                <img src="/uploads/re-image/<%= image %>" class="product-image" alt="Product Image">
                                <button type="button" class="delete-image" onclick="deleteSingleImage('<%= image %>', '<%= product._id %>')">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        <% }) %>
                    </div>

                    <div class="form-group" style="margin-top: 1rem;">
                        <input type="file" name="images" multiple class="form-control" accept="image/*">
                        <div id="images-error" class="error-message"></div>
                    </div>
                </div>

                <button type="button" id="updateBtn" onclick="validateAndSubmit()">Update Product</button>
            </form>
        </div>
    </section>

    <script>
        function validateAndSubmit() {
            if (validateForm()) {
                document.getElementById('productForm').submit();
            }
        }

        function validateForm() {
            let isValid = true;
            clearErrorMessages();

            const description = document.getElementsByName('descriptionData')[0].value;
            const regularPrice = document.getElementsByName('regularPrice')[0].value;
            const salePrice = document.getElementsByName('salePrice')[0].value;
            const quantity = document.getElementsByName('quantity')[0].value;
            const images = document.querySelector('input[type="file"]').files;
            const existingImages = document.querySelectorAll('.image-container').length;

            if (!description.trim()) {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }

            if (parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (existingImages === 0 && images.length === 0) {
                displayErrorMessage('images-error', 'Please select at least one image.');
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.textContent = '';
                element.style.display = 'none';
            });
        }

        function deleteSingleImage(imageId, productId) {
            fetch('/admin/deleteImage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    imageNameToServer: imageId,
                    productIdToServer: productId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === true) {
                    window.location.reload();
                }
            })
            .catch(error => console.error('Error:', error));
        }
    </script>
</body>
</html>