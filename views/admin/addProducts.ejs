<%-include("../../views/partials/admin/header")%>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #00000056;
        }

        .content-main {
            padding: 20px;
        }

        .content-header h2 {
            font-size: 24px;
            font-weight: bold;
            color: #333;
            margin-bottom: 20px;
        }

        .card {
            border: none;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            background-color: #333;
            margin-bottom: 20px;
        }

        .card-header {
            padding: 15px 20px;
            border-bottom: 1px solid #333;
        }

        .card-body {
            padding: 20px;
        }

        .form-label {
            font-weight: bold;
            color: #555;
            display: block;
            margin-bottom: 8px;
        }

        .form-control {
            width: 100%;
            border-radius: 8px;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            transition: border-color 0.3s;
            margin-bottom: 15px;
        }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
            outline: none;
        }

        .form-select {
            width: 150px;
            border-radius: 8px;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            transition: border-color 0.3s;
            cursor: pointer;
        }

        .btn {
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            padding: 10px 20px;
            transition: background-color 0.3s;
            cursor: pointer;
            border: none;
        }

        .btn-primary {
            background-color: #28a745;
            color: white;
        }

        .btn-primary:hover {
            background-color: #218838;
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

        .error-message {
            color: red;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 10px;
        }

        .thumbnail {
            width: 80px;
            height: 80px;
            overflow: hidden;
            border: 1px solid #ccc;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f5f5f5;
        }

        .thumbnail img {
            max-width: 100%;
            max-height: 100%;
        }

        .image-cropper {
            border: hidden;
            border-radius: 8px;
            padding: 5px;
            position: relative;
            margin-top: 10px;
            display: none;
        }

        #addedImagesContainer img {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 5px;
            width: 100%;
        }

        #imgView1, #imgView2, #imgView3, #imgView4 {
            display: block;
            max-width: 100%;
            max-height: 200px;
            margin: 10px auto;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            margin: -10px;
        }

        .col-lg-4 {
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
            padding: 10px;
        }

        .mb-4 {
            margin-bottom: 1.5rem;
        }
    </style>
</head>
<body>
    <section class="content-main">
        <div class="content-header">
            <h2 class="content-title">Add New Product</h2>
        </div>

        <div class="card">
            <div class="card-body">
                <form method="POST" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                    <div class="mb-4">
                        <label for="product_name" class="form-label">Product Name</label>
                        <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name">
                        <div id="productName-error" class="error-message"></div>
                    </div>

                    <div class="mb-4">
                        <label class="form-label">Description</label>
                        <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control" rows="4"></textarea>
                        <div id="description-error" class="error-message"></div>
                    </div>

                    <div class="row">
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Regular price</label>
                                <input placeholder="₹" name="regularPrice" type="text" class="form-control">
                                <div id="regularPrice-error" class="error-message"></div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Sale price</label>
                                <input placeholder="₹" name="salePrice" type="text" class="form-control">
                                <div id="salePrice-error" class="error-message"></div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Quantity</label>
                                <input placeholder="" name="quantity" type="text" class="form-control">
                                <div id="quantity-error" class="error-message"></div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label class="form-label">Category</label>
                        <select class="form-select" name="category">
                            <% for(let i=0; i<cat.length; i++) { %>
                                <option value="<%=cat[i].name%>"><%=cat[i].name%></option>
                            <% } %>
                        </select>
                        <div id="category-error" class="error-message"></div>
                    </div>

                    <div class="card">
                        <div class="card-header">
                            <h4>Choose images</h4>
                        </div>
                        <div class="card-body">
                            <div id="addedImagesContainer" class="thumbnails-container"></div>
                            
                            <% for(let i = 1; i <= 4; i++) { %>
                            <div class="mb-4">
                                <img src="" alt="" id="imgView<%=i%>">
                                <input class="form-control" type="file" name="images" id="input<%=i%>"
                                    accept="image/png, image/jpeg, image/webp"
                                    onchange="viewImage <%=i %>(event), viewImage(event, <%=i%>)">
                                <div id="image-error<%=i%>" class="error-message"></div>
                                <div class="image-cropper">
                                    <img src="" width="250px" height="250px" id="croppedImg<%=i%>" alt="">
                                    <button type="button" id="saveButton<%=i%>" class="btn btn-primary">Save</button>
                                </div>
                            </div>
                            <% } %>
                        </div>
                    </div>

                    <div class="mt-4">
                        <button class="btn btn-primary" type="submit">Publish</button>
                        <button class="btn btn-secondary" type="button" onclick="resetForm()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
        function validateForm() {
            let isValid = true;
            const fields = ['product_name', 'descriptionid', 'regularPrice', 'quantity'];
            
            fields.forEach(field => {
                const element = document.getElementById(field);
                const error = document.getElementById(`${field}-error`);
                
                if (!element.value.trim()) {
                    error.style.display = 'block';
                    error.textContent = 'This field is required';
                    isValid = false;
                } else {
                    error.style.display = 'none';
                }
            });
            
            return isValid;
        }

        function resetForm() {
            document.querySelector('form').reset();
            document.querySelectorAll('.error-message').forEach(error => {
                error.style.display = 'none';
            });
            document.querySelectorAll('img[id^="imgView"]').forEach(img => {
                img.src = '';
            });
        }

        function viewImage(event, index) {
            const file = event.target.files[0];
            const imgView = document.getElementById(`imgView${index}`);
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imgView.src = e.target.result;
                }
                reader.readAsDataURL(file);
            }
        }
    </script>
</body>
</html>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>

function validateAndSubmit(){
if(validateForm()){
document.forms[0].submit();
console.log("1111111111111111")
}
}

function viewImage1(event){
document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0])
}


function viewImage2(event){
document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0])
}

function viewImage3(event){
document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0])
}

function viewImage4(event){
document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0])
}

//for processing image - crop ,changing file name
function viewImage(event,index){
let input = event.target;


    
let reader = new FileReader();
reader.onload = function (){

 let dataURL = reader.result;
 let image = document.getElementById("imgView"+index)

 image.src = dataURL;
 let cropper = new Cropper(image,{
     aspectRatio:1,
     viewMode:1,
     guides:true,
     background:false,
     autoCropArea:1,
     Zoomable:true
 })
 let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
 cropperContainer.style.display = "block";
 let saveButton = document.querySelector('#saveButton'+index)
                saveButton.addEventListener('click',async function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.getElementById("croppedImg"+index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg',1.0)

                
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;

                    await croppedCanvas.toBlob(blob=>{
                        let input = document.getElementById('input'+index)
                        let imgFile = new File([blob],fileName,blob)
                        const fileList = new DataTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files

                    })
                    cropperContainer.style.display= "none";
                    cropper.destroy();
                    
                })
            }
            reader.readAsDataURL(input.files[0]);
          }


          const selectedImages = [];
document.getElementById('input1').addEventListener('change', handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;

    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);

        const thumbnail = document.createElement('div');
        thumbnail.classList.add('thumbnail');

        const img = document.createElement('img');
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";

        const removeIcon = document.createElement('span');
        removeIcon.classList.add('remove-icon');
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener('click', function () {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
            updateFileInput();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
    updateFileInput();
}

function updateFileInput() {
    const input = document.getElementById('input1');
    const fileList = new DataTransfer();
    selectedImages.forEach(file => {
        fileList.items.add(file);
    });
    input.files = fileList.files;
}
console.log(document.getElementById('input1').files);



function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const quantity = document.getElementsByName('quantity')[0].value;
    let isValid = true;

    // Validation for other fields
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }
    
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    if (parseInt(quantity) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (parseFloat(price) <= parseFloat(saleprice)) {
        displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
    }

    // Image validation for input1 to input4
    let imageCount = 0;
    for (let i = 1; i <= 4; i++) {
        const imageInput = document.getElementById('input' + i);
        if (imageInput.files.length > 0) {
            const file = imageInput.files[0];
            const fileType = file.type;
            if (!['image/png', 'image/jpeg', 'image/webp'].includes(fileType)) {
                displayErrorMessage(`image-error${i}`, 'Please select a valid image format (PNG, JPEG, WEBP).');
                isValid = false;
            } else {
                imageCount++;
            }
        } else {
            displayErrorMessage(`image-error${i}`, 'Please select an image.');
            isValid = false;
        }
    }

    if (imageCount === 0) {
        displayErrorMessage('images-error', 'Please select at least one image.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}


          

</script>
     

